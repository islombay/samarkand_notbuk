// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/access_token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get new access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get new access token",
                "operationId": "GetAccessToken",
                "responses": {}
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login as client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login as client",
                "operationId": "Login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginClient"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/auth/login_admin": {
            "post": {
                "description": "Login as admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login as admin",
                "operationId": "LoginAdmin",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/auth/profile": {
            "post": {
                "description": "Add first and last name to profile while authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Add first and last name to profile while authorization",
                "operationId": "LoginProfile",
                "parameters": [
                    {
                        "description": "Profile request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProfileLogin"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/auth/verify": {
            "post": {
                "description": "Verify login with sms code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify login with sms code",
                "operationId": "VerifyLogin",
                "parameters": [
                    {
                        "description": "Verify request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VerifyLogin"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/brand": {
            "get": {
                "description": "Get brand list",
                "tags": [
                    "brand"
                ],
                "summary": "Get brand list",
                "operationId": "BrandGetList",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of brands",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update brand. Update only given values",
                "tags": [
                    "brand"
                ],
                "summary": "Update brand",
                "operationId": "BrandUpdate",
                "parameters": [
                    {
                        "description": "Update",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "brand",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create brand",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "Create brand",
                "operationId": "BrandCreate",
                "parameters": [
                    {
                        "description": "Create brand request",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internel server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete brand",
                "tags": [
                    "brand"
                ],
                "summary": "Delete brand",
                "operationId": "BrandDelete",
                "parameters": [
                    {
                        "description": "Delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/brand/{id}": {
            "get": {
                "description": "Get brand by id",
                "tags": [
                    "brand"
                ],
                "summary": "Get brand by id",
                "operationId": "BrandGetByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "brand",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Invalid id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/category": {
            "get": {
                "description": "Get category list",
                "tags": [
                    "category"
                ],
                "summary": "Get category list",
                "operationId": "CategoryGetList",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Return only sub category ?",
                        "name": "only_sub",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update category. Update only given values",
                "tags": [
                    "category"
                ],
                "summary": "Update category",
                "operationId": "CategoryUpdate",
                "parameters": [
                    {
                        "description": "Update",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create category",
                "operationId": "CreateCategory",
                "parameters": [
                    {
                        "description": "Create category request",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internel server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete category",
                "tags": [
                    "category"
                ],
                "summary": "Delete category",
                "operationId": "CategoryDelete",
                "parameters": [
                    {
                        "description": "Delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/category/{id}": {
            "get": {
                "description": "Get category by id",
                "tags": [
                    "category"
                ],
                "summary": "Get category by id",
                "operationId": "CategoryGetByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Invalid id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/files": {
            "get": {
                "description": "Get files list",
                "tags": [
                    "files"
                ],
                "summary": "Get files list",
                "operationId": "FileGetList",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of files",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete file",
                "tags": [
                    "files"
                ],
                "summary": "Delete file",
                "operationId": "FileDelete",
                "parameters": [
                    {
                        "description": "Delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/files/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload file",
                "operationId": "UploadFile",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File info",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internel server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/files/{id}": {
            "get": {
                "description": "Get file by id",
                "tags": [
                    "files"
                ],
                "summary": "Get file by id",
                "operationId": "FileGetByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Invalid id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/product": {
            "get": {
                "description": "Get list of products",
                "tags": [
                    "product"
                ],
                "summary": "Get list of products",
                "operationId": "ProductGetList",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product list",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create product",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Create product",
                "operationId": "ProductCreate",
                "parameters": [
                    {
                        "description": "Create product request",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/product/{id}": {
            "get": {
                "description": "Get product by id",
                "tags": [
                    "product"
                ],
                "summary": "Get product by id",
                "operationId": "ProductGetByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Invalid id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product by id",
                "tags": [
                    "product"
                ],
                "summary": "Delete product by id",
                "operationId": "ProductDelete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product deleted",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Invalid id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/seller": {
            "get": {
                "description": "Get seller list",
                "tags": [
                    "seller"
                ],
                "summary": "Get seller list",
                "operationId": "SellerGetList",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sellers",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update seller. Update only given values",
                "tags": [
                    "seller"
                ],
                "summary": "Update seller",
                "operationId": "SellerUpdate",
                "parameters": [
                    {
                        "description": "Update",
                        "name": "seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateSeller"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "seller",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create seller",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "seller"
                ],
                "summary": "Create seller",
                "operationId": "SellerCreate",
                "parameters": [
                    {
                        "description": "Create seller request",
                        "name": "seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSeller"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "seller",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internel server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete seller",
                "tags": [
                    "seller"
                ],
                "summary": "Delete seller",
                "operationId": "SellerDelete",
                "parameters": [
                    {
                        "description": "Delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/seller/{id}": {
            "get": {
                "description": "Get seller by id",
                "tags": [
                    "seller"
                ],
                "summary": "Get seller by id",
                "operationId": "SellerGetByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "seller id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "seller",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Invalid id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/subcategory": {
            "get": {
                "description": "Get subcategory list",
                "tags": [
                    "category"
                ],
                "summary": "Get subcategory list",
                "operationId": "CategoryGetListSub",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Return only sub category ?",
                        "name": "only_sub",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update subcategory. Update only given values",
                "tags": [
                    "category"
                ],
                "summary": "Update subcategory",
                "operationId": "SubCategoryUpdate",
                "parameters": [
                    {
                        "description": "Update",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete subcategory",
                "tags": [
                    "category"
                ],
                "summary": "Delete subcategory",
                "operationId": "SubcategoryDelete",
                "parameters": [
                    {
                        "description": "Delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad id",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateBrand": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateProduct": {
            "type": "object",
            "required": [
                "name",
                "price"
            ],
            "properties": {
                "brand_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CreateProductFiles"
                    }
                },
                "image_id": {
                    "type": "string"
                },
                "installments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CreateProductInstallments"
                    }
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "video_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateProductFiles": {
            "type": "object",
            "required": [
                "file_id"
            ],
            "properties": {
                "file_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateProductInstallments": {
            "type": "object",
            "required": [
                "period",
                "price"
            ],
            "properties": {
                "period": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.CreateSeller": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "phone_number"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 40
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 40
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 12
                }
            }
        },
        "models.DeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "required": [
                "password",
                "phone_number"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.LoginClient": {
            "type": "object",
            "required": [
                "phone_number"
            ],
            "properties": {
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.ProfileLogin": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "request_id"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 40
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 40
                },
                "request_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateBrand": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCategory": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateSeller": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 40
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 40
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.VerifyLogin": {
            "type": "object",
            "required": [
                "code",
                "request_id"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                }
            }
        },
        "status.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "data": {},
                "error": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
